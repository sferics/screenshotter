# default settings for the ems_screenshot.py screenshotter script
# these configurations can be overwritten by command line arguments

[general]
# where to save the screenshots (absolute or relative path)
output_dir     = screenshots
# start and end datetime (time as HHMM or datetime as YYYYhhmm) OR now
start_datetime = now
# end_datetime or max. if end_datetime == now: take screenshot instantly
end_datetime   = now
# interval in minutes to take the screenshots
interval       = 1
# sites        = [a]ll, [u]wz, [d]wd, [m]etmaps
sites          = ud
# watermark    = 1 -> on, 0 -> off
watermark      = 1
# User Agent of browser to impersonate another browser and hide that we are scraping ;)
#user_agent     = Mozilla/5.0 (X11; Ubuntu; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.7103.59 Safari/537.36
# Firefox 137 user agent
user_agent     = Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:139.0) Gecko/20100101 Firefox/139.0
# write a log file (error.log)
log            = 1
# print verbose output
verbose        = 1
# join the processes to the main process (wait for all processes to finish)
join           = 0
# choose the browser to use for screenshots
browser	      = chromium
# set timeout for the browser to load the page (in seconds)
timeout        = 30

[metmaps]
# metmaps login credentials
username    = user
password    = pw
# which URL to screenshot (example URL). The script will replace tim=YYYYmmddHHMM with the current datetime
URL         = https://metmaps.eu/?dd=31&mm=05&yy=2025&hh=12&ii=38&pre=&bbox=3%2C47%2C18%2C56&mod=&lev=Sfc&obs=&sou=&rad=&bli=&warn=DWD&x=800&y=600&click=&dns=Auto&lin=o&arr=o&pla=&adm=o&rd=o&sk=ccbbaa&tim=202505311238&x1=&x2=&y1=&y2=&anim=&autore=
